{"version":3,"sources":["ckeditor-loader.js","confirmation.js","datetimepicker-loader.js","disable.js","filterable.js","select2-loader.js","slugger.js","sortable-table.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClvxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"bootstrap-ui.js","sourcesContent":[";(function ($, window) {\n  'use strict';\n\n  // CKEDITOR-LOADER DATA-API\n  // ========================\n\n  (function ($, window) {\n    // We have to use $(winodow).load() as $(document).ready() can not be triggered manually\n    // and thus it would make it impossible to test this part of the code.\n    $(window).on('load', function () {\n      $('[data-onload-ckeditor]').each(function () {\n        var language = $('html').attr('lang');\n        var confObj = {};\n        var $this = $(this);\n        var confValue = $this.data('onload-ckeditor');\n\n        if (confValue) {\n          if (typeof confValue === 'object') {\n            confObj = confValue;\n          } else {\n            confObj = { customConfig: confValue };\n          }\n        }\n\n        if (language && !confObj.hasOwnProperty('language')) {\n          confObj.language = language;\n        }\n\n        $this.ckeditor(confObj);\n      });\n    });\n  }($, window));\n\n}(jQuery, window));\n",";(function ($, window, document) {\n  'use strict';\n\n  // CONFIRMATION CLASS DEFINITION\n  // =============================\n\n  var Confirmation = function ($triggerEl, options) {\n    options = $.extend({}, this.options, options);\n    this.modal = this.getModal(\n      options['confirm-message'],\n      options['confirm-yes'],\n      options['confirm-no']\n    );\n    this.$triggerEl = $triggerEl;\n    this.callback = options.callback;\n  };\n\n  Confirmation.prototype.options = {\n    'confirm-message': 'Are you sure?',\n    'confirm-yes': 'Yes',\n    'confirm-no': 'No',\n    callback: function () {}, // Having empty callback is useless, it is here as a sane fallback for\n    // tests\n  };\n\n  Confirmation.prototype.showConfirmation = function () {\n    var $triggerEl = this.$triggerEl;\n    var callback = this.callback;\n    var $modal = this.modal.modal({\n      keboard: false,\n      backdrop: 'static',\n    });\n\n    $triggerEl.trigger('show.bui.confirmation');\n    $triggerEl.on('rejected.bui.confirmation', function () {\n      callback(false);\n    });\n\n    $triggerEl.on('confirmed.bui.confirmation', function () {\n      callback(true);\n    });\n\n    $triggerEl.on('rejected.bui.confirmation confirmed.bui.confirmation', function () {\n      $modal.on('hidden.bs.modal', function () {\n        $(this).remove();\n      });\n\n      // The fade class is removed before hiding the modal to prevent the backdrop from staying\n      // behond\n      // Thats why there is no animation :(\n      // http://stackoverflow.com/questions/22056147/bootstrap-modal-backdrop-remaining\n      $modal.removeClass('fade').modal('hide');\n      $triggerEl.off('rejected.bui.confirmation confirmed.bui.confirmation');\n    });\n\n    $modal.on('keydown.bui.confirmation', function (e) {\n      if (e.keyCode === 27) { // escape\n        $triggerEl.trigger('rejected.bui.confirmation');\n      } else if (e.keyCode === 13) { // enter\n        $triggerEl.trigger('confirmed.bui.confirmation');\n      }\n    });\n\n    $modal\n      .find('[data-confirmation=reject]')\n      .on('click.bui.confirmation', function () {\n        $triggerEl.trigger('rejected.bui.confirmation');\n      });\n\n    $modal\n      .find('[data-confirmation=confirm]')\n      .on('click.bui.confirmation', function () {\n        $triggerEl.trigger('confirmed.bui.confirmation');\n      });\n  };\n\n  Confirmation.prototype.getModal = function (message, yes, no) {\n    return $('<div class=\"modal fade\" tabindex=\"-1\">' +\n      '<div class=\"modal-dialog modal-sm\">' +\n      '<div class=\"modal-content\">' +\n      '<div class=\"modal-body\">' + message + '</div>' +\n      '<div class=\"modal-footer\">' +\n      '<button type=\"button\" class=\"btn btn-default\" data-confirmation=\"reject\">' + no +\n      '</button><button type=\"button\" class=\"btn btn-primary\" data-confirmation=\"confirm\">' +\n      yes + '</button></div></div></div></div>');\n  };\n\n  // CONFIRMATION PLUGIN DEFINITION\n  // ==============================\n\n  function Plugin(options) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bui.confirmation');\n\n      if (!data) {\n        data = new Confirmation($this, options);\n        $this.data('bui.confirmation', data);\n      }\n\n      data.showConfirmation();\n    });\n  }\n\n  var old = $.fn.confirmation;\n\n  $.fn.confirmation = Plugin;\n  $.fn.confirmation.Constructor = Confirmation;\n\n  // CONFIRMATION NO CONFLICT\n  // ========================\n  $.fn.confirmation.noConflict = function () {\n    $.fn.confirmation = old;\n    return this;\n  };\n\n  // CONFIRMATION DATA-API\n  // =====================\n\n  $(document).on(\n    'click.bui.confirmation.data-api',\n    '[data-toggle=confirm]',\n    function (e, noConfirm) {\n      var $this = $(this);\n\n      if (!noConfirm) {\n        e.preventDefault();\n\n        Plugin.call($this, {\n          'confirm-message': $this.data('confirm-message'),\n          'confirm-yes': $this.data('confirm-yes'),\n          'confirm-no': $this.data('confirm-no'),\n          callback: function (result) {\n            if (result) {\n              $this.trigger('click.bui.confirmation.data-api', true);\n            }\n          },\n        });\n      }\n    }\n  );\n\n}(jQuery, window, document));\n",";(function ($, moment, window) {\n  'use strict';\n\n  var DatetimePickerLoader = function ($element) {\n    this.$element = $element;\n  };\n\n  DatetimePickerLoader.prototype.filterLocale = function (locale) {\n    return moment.locale(locale);\n  };\n\n  DatetimePickerLoader.prototype.init = function (confObj) {\n    confObj.locale = this.filterLocale(confObj.locale);\n    this.$element.datetimepicker(confObj);\n  };\n\n  // We have to use $(winodow).load() as $(document).ready() can not be triggered manually\n  // and thus it would make it impossible to test this part of the code.\n  $(window).on('load', function () {\n    var initComponentFn = function (inlineConf) {\n      var datetimePickerLoader = new DatetimePickerLoader($(this));\n      var conf = {\n        allowInputToggle: true,\n        sideBySide: true,\n        locale: $('html').attr('lang'),\n      };\n\n      if (inlineConf) {\n        $.extend(conf, inlineConf);\n      }\n\n      datetimePickerLoader.init(conf);\n    };\n\n    // CKEDITOR-LOADER DATA-API\n    // ========================\n\n    $('[data-onload-datetimepicker]').each(function () {\n      initComponentFn.call(this, $(this).data('onload-datetimepicker'));\n    });\n  });\n\n}(jQuery, moment, window));\n",";(function ($, window, document) {\n  'use strict';\n\n  // DISABLE CLASS DEFINITION\n  // ========================\n  var Disable = function ($element) {\n    this.$element = $element;\n  };\n\n  Disable.prototype.toggle = function () {\n    $(document).trigger('toggle.bui.disable');\n    this.$element.prop('disabled', !this.$element.prop('disabled'));\n    $(document).trigger('toggled.bui.disable');\n  };\n\n  // DISABLE PLUGIN DEFINITION\n  // =========================\n\n  function Plugin() {\n    this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bui.disable');\n\n      if (!data) {\n        data = new Disable($this);\n        $this.data('bui.disable', data);\n      }\n\n      data.toggle();\n    });\n\n    return this;\n  }\n\n  var old = $.fn.disable;\n\n  $.fn.disable = Plugin;\n  $.fn.disable.Constructor = Disable;\n\n  // DISABLE NO CONFLICT\n  // ===================\n\n  $.fn.disable.noConflict = function () {\n    $.fn.disable = old;\n    return this;\n  };\n\n  // DISABLE DATA-API\n  // ================\n\n  (function (Plugin, $, window) {\n    // We have to use $(window).load() as $(document).ready() can not be triggered manually\n    // and thus it would make it impossible to test this part of the code.\n    $(window).on('load', function () {\n      var $controls = $('[data-toggle=disable]');\n\n      $controls.each(function () {\n        var $this = $(this);\n        var eventType = $this.data('disable-event');\n        if (!eventType) {\n          eventType = 'change';\n        }\n\n        $this.on(eventType + '.bui.disable.data-api', function () {\n          Plugin.call($($this.data('disable-target')));\n        });\n      });\n    });\n  }(Plugin, $, window));\n\n}(jQuery, window, document));\n",";(function ($, window, document) {\n  'use strict';\n\n  // FILTERABLE CLASS DEFINITION\n  // ===========================\n\n  var Filterable = function ($filterable) {\n    this.$filterable = $filterable;\n  };\n\n  Filterable.prototype.filter = function (fObjects) {\n    var dataVal;\n    var filterValCounter;\n    var filterValLength;\n    var filterVal;\n    var filterOper;\n    var filterStrict;\n    var dataValCounter;\n    var dataValLength;\n    var fObjCounter;\n    var hideEl;\n    var fObjectsLength;\n\n    this.$filterable.show();\n    if (fObjects && fObjects.length) {\n      fObjectsLength = fObjects.length;\n      for (fObjCounter = 0; fObjCounter < fObjectsLength; fObjCounter++) {\n        filterVal = fObjects[fObjCounter]['filter-value'];\n        filterOper = fObjects[fObjCounter]['filter-operator'];\n        filterStrict = fObjects[fObjCounter]['filter-strict'];\n        dataVal = this.$filterable.data(fObjects[fObjCounter]['filter-attrib']);\n\n        if (dataVal !== null) {\n          hideEl = false;\n\n          filterValLength = filterVal.length;\n          if (filterOper === 'subset') {\n            for (filterValCounter = 0; filterValCounter < filterValLength; filterValCounter++) {\n              if (dataVal.indexOf(filterVal[filterValCounter]) === -1) {\n                hideEl = true;\n                break;\n              }\n            }\n          } else if (filterOper === 'intersect') {\n            hideEl = true;\n            if (typeof filterVal === 'string') {\n              filterVal = [filterVal];\n            }\n\n            if (typeof dataVal === 'string') {\n              dataVal = [dataVal];\n            }\n\n            filterValLength = filterVal.length;\n            dataValLength = dataVal.length;\n            for (filterValCounter = 0; filterValCounter < filterValLength; filterValCounter++) {\n              for (dataValCounter = 0; dataValCounter < dataValLength; dataValCounter++) {\n                if (filterStrict) {\n                  if (dataVal[dataValCounter].toLowerCase() ===\n                    filterVal[filterValCounter].toLowerCase()) {\n                    hideEl = false;\n                    break;\n                  }\n                } else {\n                  if (dataVal[dataValCounter].toLowerCase().indexOf(filterVal[filterValCounter]\n                    .toLowerCase()) !== -1) {\n                    hideEl = false;\n                    break;\n                  }\n                }\n              }\n            }\n          } else if (\n            filterOper === '=' && +dataVal !== +filterVal ||\n            filterOper === '>=' && +dataVal < +filterVal ||\n            filterOper === '<=' && +dataVal > +filterVal ||\n            filterOper === '<' && +dataVal >= +filterVal ||\n            filterOper === '>' && +dataVal <= +filterVal\n          ) {\n            hideEl = true;\n          }\n\n          if (hideEl === true) {\n            this.$filterable.hide();\n          }\n        }\n      }\n    }\n  };\n\n  Filterable.prototype.resetFilter = function () {\n    this.$filterable.show();\n  };\n\n  // FILTERABLE PLUGIN DEFINITION\n  // ============================\n\n  function Plugin(options) {\n    if (this.length) {\n      if (options === 'reset') {\n        $(document).trigger('resetStart.bui.filterable');\n      } else {\n        $(document).trigger('filter.bui.filterable');\n      }\n\n      this.each(function () {\n        var data;\n        var $this = $(this);\n\n        data = $this.data('bui.filterable');\n        if (!data) {\n          data = new Filterable($this);\n          $this.data('bui.filterable', data);\n        }\n\n        if (options === 'reset') {\n          data.resetFilter();\n        } else {\n          data.filter(options);\n        }\n      });\n\n      if (options === 'reset') {\n        $(document).trigger('resetEnd.bui.filterable');\n      } else {\n        $(document).trigger('filtered.bui.filterable');\n      }\n    }\n\n    return this;\n  }\n\n  var old = $.fn.filterable;\n\n  $.fn.filterable = Plugin;\n  $.fn.filterable.Constructor = Filterable;\n\n  // FILTERABLE NO CONFLICT\n  // ======================\n\n  $.fn.filterable.noConflict = function () {\n    $.fn.filterable = old;\n    return this;\n  };\n\n  // FILTERABLE DATA-API\n  // ===================\n\n  var lastEventTarget;\n  var lastEventValue;\n\n  $(window).on('load', function () {\n    $.each($('form'), function () {\n      var $this = $(this);\n      var filterData;\n\n      if ($this.data('filter-storage-id')) {\n        var storageId = window.location.pathname + '|' + $this.data('filter-storage-id');\n        if (window.sessionStorage.getItem(storageId)) {\n          filterData = JSON.parse(window.sessionStorage.getItem(storageId));\n          $.each(filterData, function () {\n            $this\n              .find('[data-filter-attrib=' + this['filter-attrib'] + ']')\n              .val(this['filter-value']);\n          });\n\n          Plugin.call($($this.data('filter-target')), filterData);\n        }\n      }\n    });\n  });\n\n  $(document).on(\n    'keyup.bui.filterable.data-api change.bui.filterable.data-api',\n    '[data-toggle=filter]',\n    function (e) {\n      var $filter = $(this).closest('form');\n      var filterData = [];\n\n      if (lastEventTarget !== e.target || lastEventTarget === e.target &&\n        lastEventValue !== e.target.value) {\n        $filter.find(':input').each(function () {\n          var $this = $(this);\n          if ($this.val() !== '' && $this.val() !== null) {\n            filterData.push({\n              'filter-attrib': $this.data('filter-attrib'),\n              'filter-operator': $this.data('filter-operator'),\n              'filter-strict': $this.data().hasOwnProperty('filterStrict') &&\n                $this.data('filter-strict') !== false,\n              'filter-value': $this.val(),\n            });\n          }\n\n          if ($filter.data('filter-storage-id')) {\n            window.sessionStorage.setItem(\n              window.location.pathname + '|' + $filter.data('filter-storage-id'),\n              JSON.stringify(filterData)\n            );\n          }\n\n          Plugin.call($($filter.data('filter-target')), filterData);\n        });\n      }\n\n      lastEventTarget = e.target;\n      lastEventValue = e.target.value;\n    }\n  );\n\n  $(document).on('click.bui.filterable.data-api', '[data-toggle=\"filter-reset\"]', function () {\n    var $filter = $(this).closest('form');\n    var storageId = $filter.data('filter-storage-id');\n\n    $filter[0].reset();\n    if (storageId) {\n      window.sessionStorage.removeItem(window.location.pathname + '|' + storageId);\n    }\n\n    Plugin.call($($filter.data('filter-target')), 'reset');\n  });\n\n}(jQuery, window, document));\n",";(function ($, window) {\n  'use strict';\n\n  // SELECT2-LOADER DATA-API\n  // ========================\n\n  (function ($, window) {\n    // We have to use $(winodow).load() as $(document).ready() can not be triggered manually\n    // and thus it would make it impossible to test this part of the code.\n    $(window).on('load', function () {\n      $('[data-onload-select2]').each(function () {\n        var confObj = {};\n        var $this = $(this);\n        var confValue = $this.data('onload-select2');\n        var formatFunc = function (option) {\n          var $optionEl = $(option.element);\n          var imageSrc = $optionEl.data('image-src');\n          var imageSrcset = $optionEl.data('image-srcset');\n          var imageHeight = $optionEl.data('image-height');\n          var imageWidth = $optionEl.data('image-width');\n          var attribs = '';\n\n          if (imageSrc) {\n            attribs = 'src=\"' + imageSrc + '\" alt=\"' + option.text + '\"';\n            if (imageSrcset) {\n              attribs = attribs + ' srcset=\"' + imageSrcset + '\"';\n            }\n\n            if (imageHeight) {\n              attribs = attribs + ' height=\"' + imageHeight + '\"';\n            }\n\n            if (imageWidth) {\n              attribs = attribs + ' width=\"' + imageWidth + '\"';\n            }\n\n            return '<img ' + attribs + '>&nbsp;' + option.text;\n          }\n\n          return option.text;\n        };\n\n        if (confValue) {\n          confObj = confValue;\n        }\n\n        confObj.formatSelection = formatFunc;\n        confObj.formatResult = formatFunc;\n        confObj.escapeMarkup = function (m) { return m; };\n\n        $this.select2(confObj);\n      });\n    });\n  }($, window));\n\n}(jQuery, window));\n",";(function ($, window, document) {\n  'use strict';\n\n  // SLUGGER CLASS DEFINITION\n  // ========================\n  var Slugger = function ($source, options) {\n    this.$source = $source;\n    this.$target = options.target;\n  };\n\n  Slugger.prototype.updateSlug = function () {\n    var generateSlug = function (str) {\n      var from = 'ãàáäâåčçďẽèéëêìíïîñõòóöôřšťùúüûýž·/_,:;';\n      var to = 'aaaaaaccdeeeeeiiiinooooorstuuuuyz------';\n\n      str = str\n        .replace(/^\\s+|\\s+$/g, '') // trim\n        .toLowerCase();\n\n      for (var i = 0; i < from.length; i++) {\n        str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n      }\n\n      str = str\n        .replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n        .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n        .replace(/-+/g, '-'); // collapse dashes\n\n      return str;\n    };\n\n    this.$target.val(generateSlug(this.$source.val()));\n    this.$source.trigger('updated.bui.slugger');\n  };\n\n  // SLUGGER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(options) {\n    this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bui.slugger');\n\n      if (!data) {\n        data = new Slugger($this, options);\n        $this.data('bui.slugger', data);\n      }\n\n      data.updateSlug();\n    });\n\n    return this;\n  }\n\n  var old = $.fn.slugger;\n\n  $.fn.slugger = Plugin;\n  $.fn.slugger.Constructor = Slugger;\n\n  // SLUGGER NO CONFLICT\n  // ===================\n\n  $.fn.slugger.noConflict = function () {\n    $.fn.slugger = old;\n    return this;\n  };\n\n  // SLUGGER DATA-API\n  // ================\n\n  $(document)\n    .on('keyup.bui.slugger.data-api', '[data-toggle=slugger]', function () {\n      $('[data-toggle=slugger]').each(function () {\n        var $this = $(this);\n        Plugin.call($this, { target: $($this.data('slugger-target')) });\n      });\n    })\n    .on('change.bui.slugger.data-api', '[data-toggle=slugger]', function () {\n      $(this).trigger('changed.bui.slugger');\n    });\n\n}(jQuery, window, document));\n",";(function ($, window, document) {\n  'use strict';\n\n  // SORTABLE TABLE CLASS DEFINITION\n  // ===============================\n\n  var SortableTable = function ($sortedTable, $navigation) {\n    this.$sortedTable = $sortedTable;\n    this.$navigation = $navigation;\n    if ($navigation) {\n      this.colCount = $sortedTable.find('tr')[0].childElementCount;\n    }\n  };\n\n  SortableTable.prototype.sort = function ($sortedTh, sortDir) {\n    var sortGroup;\n    var rowCounter;\n    var rowsLength;\n    var tableHtml;\n    var row;\n    var isNavigationCol;\n    var rows;\n    var newSortGroup = null;\n    var navigationHtml = '';\n    var isSortedAsc = $sortedTh.hasClass('sorting-asc');\n\n    this.$sortedTable\n      .trigger('sort.bui.sortableTable')\n      .find('th')\n      .removeClass('sorting-asc')\n      .removeClass('sorting-desc');\n\n    if (isSortedAsc || sortDir === 'desc') {\n      sortDir = 'desc';\n      $sortedTh.addClass('sorting-desc');\n    } else {\n      $sortedTh.addClass('sorting-asc');\n    }\n\n    rows = this.$sortedTable\n      .find('tbody tr')\n      .toArray()\n      .sort(this.comparer($sortedTh.index(), sortDir));\n\n    isNavigationCol = this.$navigation && typeof $(rows[0]).children('td').eq($sortedTh.index())\n      .data('sort-group') !== 'undefined';\n    tableHtml = '<thead>' + this.$sortedTable.find('thead:eq(0)').html() + '</thead>';\n\n    rowsLength = rows.length;\n    for (rowCounter = 0; rowCounter < rowsLength; rowCounter++) {\n      row = rows[rowCounter];\n      if (isNavigationCol) {\n        sortGroup = $(row)\n          .children('td')\n          .eq($sortedTh.index())\n          .data('sort-group');\n\n        if (newSortGroup !== sortGroup) {\n          newSortGroup = sortGroup;\n          navigationHtml += '<li><a href=\"#letter-' + sortGroup + '\">' + sortGroup + '</a></li>';\n          tableHtml += '<thead><tr class=\"active\"><th colspan=\"' + this.colCount + '\">' +\n            '<h2 class=\"h3\" id=\"letter-' + newSortGroup + '\">' + newSortGroup + '</h2>' +\n            '</th></tr></thead><tbody>';\n        }\n      }\n\n      tableHtml += row.outerHTML;\n    }\n\n    if (this.$navigation) {\n      if (isNavigationCol) {\n        navigationHtml = '<ul>' + navigationHtml + '</ul>';\n      }\n\n      this.$navigation.html(navigationHtml);\n    }\n\n    this.$sortedTable.html(tableHtml + '</tbody>');\n    this.$sortedTable.trigger('sorted.bui.sortableTable');\n  };\n\n  SortableTable.prototype.comparer = function (index, sortDir) {\n    return function (a, b) {\n      var result;\n      var valA;\n      var valB;\n      var getCellValue = function (row, index) {\n        var cell = $(row).children('td').eq(index);\n        if (cell.attr('data-sort-value')) {\n          return cell.attr('data-sort-value');\n        } else {\n          return cell.text();\n        }\n      };\n\n      valA = getCellValue(a, index);\n      valB = getCellValue(b, index);\n      if ($.isNumeric(valA) && $.isNumeric(valB)) {\n        result = valA - valB;\n      } else {\n        try {\n          result = valA.localeCompare(valB, $('html').attr('lang'));\n        } catch (err) {\n          if (err instanceof RangeError) {\n            result = valA.localeCompare(valB);\n          }\n        }\n      }\n\n      return sortDir === 'desc' ? result * -1 : result;\n    };\n  };\n\n  // SORTABLE TABLE PLUGIN DEFINITION\n  // ================================\n\n  function Plugin(options) {\n    return this.each(function () {\n      var $navigation;\n      var $this = $(this);\n      var data = $this.data('bui.sortableTable');\n\n      if (!data) {\n        $navigation = options && 'navigation' in options && options.navigation ?\n          $(options.navigation) : false;\n        data = new SortableTable($this, $navigation);\n        $this.data('bui.sortableTable', data);\n      }\n\n      data.sort(options['sorted-th'], options['sort-direction']);\n    });\n  }\n\n  var old = $.fn.sortableTable;\n\n  $.fn.sortableTable = Plugin;\n  $.fn.sortableTable.Constructor = SortableTable;\n\n  // SORTABLE TABLE NO CONFLICT\n  // ==========================\n\n  $.fn.sortableTable.noConflict = function () {\n    $.fn.sortableTable = old;\n    return this;\n  };\n\n  // SORTABLE TABLE DATA-API\n  // =======================\n\n  (function (Plugin, $, window, document) {\n    var callPlugin = function ($this) {\n      var $sortedTable = $this.closest('table');\n      Plugin.call($sortedTable, {\n        'sorted-th': $this,\n        navigation: $($sortedTable.data('sort-navigation')),\n      });\n    };\n\n    $(document).on('click.bui.sortableTable.data-api', 'th[data-toggle=sort]', function () {\n      callPlugin($(this));\n    });\n\n    $(document).on('keydown.bui.sortableTable.data-api', 'th[data-toggle=sort]', function (e) {\n      if (e.keyCode === 13 || e.keyCode === 32) { // enter or space\n        callPlugin($(this));\n      }\n    });\n\n    // We have to use $(winodow).load() as $(document).ready() can not be triggered manually\n    // and thus it would make it impossible to test this part of the code.\n    $(window).on('load', function () {\n      var $sortedTh = $('th[data-sort-onload]');\n      $sortedTh.each(function (i) {\n        var $sortedTable = $($sortedTh[i]).closest('table');\n        Plugin.call($sortedTable, {\n          'sorted-th': $($sortedTh[i]),\n          navigation: $sortedTable.data('sort-navigation'),\n          'sort-direction': $($sortedTh[i]).data('sort-onload'),\n        });\n      });\n    });\n  }(Plugin, $, window, document));\n\n}(jQuery, window, document));\n"]}